{"name":"Angular-audio-player","tagline":"AngularJS Directive that wraps an <audio> tag exposing handy events and selectors to customize your audio player.","body":"angular-audio-player\r\n====================\r\n\r\nAngularJS Directive that wraps an ```<audio>``` tag exposing handy events and selectors to customize your audio player.\r\n\r\n\r\n## Abstract / Idea\r\nI've come across a lot of ```<audio>``` players on the web, many using Flash, many being easy-to-use, almost none of them being compatible with AngularJS.  \r\nWhat i really was looking for was a simple audio wrapper **without** the need to support browser which don't have audio tag support!  \r\nMeans support for this project is the same as: [HTML5 audio draft][html5audiocompatibility], jQuery is not necessary, and DOM manipulation is done with 'modern' browsers in mind (IE9 not really being a top player here)  \r\n[angular-audio-player][self] is html/css **agnostic**, meaning you can use it with your browser controls and default style, or bind the methods and properties in your own View\r\n\r\n## Dude i imported the library, now what? \r\nWell read below some basic how to :p   \r\nThis directive it's just a way to expose ```<audio>``` tag property and methods to an AngularJS application, so you have to use custom html **and** css in order to interface with the audio directive.  \r\n\r\n## Simple How-To\r\nIn your AngularJS application include in dependency injection ```angular-audio-player```\r\n\r\n```javascript\r\nangular.module('myApp', ['angular-audio-player'])\r\n```\r\n\r\nThen in the html:\r\n\r\n```html\r\n<audio data-player-control=\"audio1\" data-playlist=\"playlist1\" audio-player>\r\n  <source src=\"http://upload.wikimedia.org/wikipedia/en/d/d0/Rick_Astley_-_Never_Gonna_Give_You_Up.ogg\" type=\"audio/ogg\">\r\n</audio>\r\n<span ng-show=\"audio1.playing\">Player status: Playing</span>\r\n<span ng-show=\"!audio1.playing\">Player status: Paused</span>\r\n```\r\n\r\n## Directive Attributes\r\n\r\n* **playlist**: An Array containing audioElements(s)\r\n* **player-control**: Exposed properties and methods of the ```<audio>``` tag\r\n\r\n## playlist structure\r\n\r\nPlaylist is an Array containing ```audioElement(s)```.  \r\nAn ```audioElement``` could be an Array of sourceObjects, or a single sourceObject.  \r\n\r\nsourceObject mimics ```<source>``` HTML draft  \r\n\r\n> **sourceObject structure**:\r\n```javascript\r\n{ src: 'http://some.where.com', type: 'mime/type', media: '.css.media.query' }\r\n```\r\n> **or alternatively**\r\n```javascript\r\n[\r\n  { src: 'http://some.where.com', type: 'audio/ogg' },\r\n  { src: 'http://some.where.com/lowquality', type: 'audio/ogg' },\r\n  { src: 'http://some.where.com/crapquality', type: 'audio/ogg' },\r\n  { src: 'http://some.where.com', type: 'audio/mp3' },\r\n]\r\n```\r\n\r\n*For whoever wondering what ```media``` is*: it's just a [css media query][cssmediaquery], so the browser can pick which ```<source>``` tag to load.\r\n\r\n## player-control methods and properties\r\n\r\n### `player.play()`\r\n\r\n### `player.playPause()`\r\n\r\n### `player.pause()`\r\n\r\n### `player.next()`\r\nGoes to next audioElement if there is one in the playlist, otherwise does **nothing**.\r\n\r\n### `player.prev()`\r\nGoes to previous audioElement if there is one in the playlist, otherwise does **nothing**.\r\n\r\n### `player.playing`\r\n```true``` or ```false```\r\n\r\n### `player.currentTrack`\r\nTracks the position of the playing track, it **might** change during playing the same track due to pushing elements into ```playlistArray```\r\n\r\n### `player.tracks`\r\nNumber of tracks in the playlist\r\n\r\n## Functionality\r\n\r\nYou can add/remove tracks on-fly from/to the playlist.  \r\nIf the current track gets removed, the player goes on **pause()**. (And starts loading the first track of the new playlist)\r\n\r\n**TBD**\r\n\r\n## Examples\r\n\r\n```bash\r\n$ git clone https://github.com/mrgamer/angular-audio-player.git\r\n$ cd angular-audio-player\r\n$ npm install\r\n# -- WORK WORK HERE --\r\n$ node webserver.js\r\n```\r\n\r\nNow open up [localhost:8080](http://localhost:8080/) and you will find the demo index page with other examples.\r\n\r\n### Credits\r\nA lot of guidelines to realize a simple re-usable project like this have come mainly from:\r\n\r\n* [angular-leaflet-directive][leafletdir] work of [tombatossals][leafletauth], i think is a good example of a standalone project. (other than being useful :) )\r\n* [angular-socket-io][socketbf] I think most of AngularJS developers know [Brian Ford][brianf], I'm out of count how many times i found his posts or works an enlightenment! \r\n\r\n[leafletdir]: https://github.com/tombatossals/angular-leaflet-directive\r\n[leafletauth]: https://github.com/tombatossals\r\n[socketbf]: https://github.com/btford/angular-socket-io\r\n[brianf]: https://github.com/btford\r\n[self]: http://github.com/mrgamer/angular-audio-player\r\n\r\n[html5audiocompatibility]: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio#Browser_compatibility\r\n[cssmediaquery]: http://www.w3.org/TR/2009/CR-css3-mediaqueries-20090915/#media0\r\n","google":"UA-42785441-1","note":"Don't delete this file! It's used internally to help with page regeneration."}